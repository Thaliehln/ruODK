% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/odata_submission_get.R
\name{odata_submission_get}
\alias{odata_submission_get}
\title{Retrieve form submissions, parse data and dates, download and link
attachments.}
\usage{
odata_submission_get(
  table = "Submissions",
  skip = NULL,
  top = NULL,
  count = FALSE,
  wkt = FALSE,
  parse = TRUE,
  download = TRUE,
  orders = c("YmdHMS", "YmdHMSz", "Ymd HMS", "Ymd HMSz", "Ymd", "ymd"),
  tz = "UTC",
  local_dir = "media",
  pid = get_default_pid(),
  fid = get_default_fid(),
  url = get_default_url(),
  un = get_default_un(),
  pw = get_default_pw(),
  verbose = get_ru_verbose()
)
}
\arguments{
\item{table}{The submission EntityType, or in plain words, the table name.
Default: "Submissions" (the main table).
Change to "Submissions.GROUP_NAME" for repeating form groups.
The group name can be found through \code{\link{odata_service_get}}.}

\item{skip}{The number of rows to be omitted from the results.
Example: 10, default: NA (none skipped).}

\item{top}{The number of rows to return.
Example: 100, default: NA (all returned).}

\item{count}{If TRUE, an `@odata.count` property will be returned in the
response from ODK Central. Default: FALSE.}

\item{wkt}{If TRUE, geospatial data will be returned as WKT (Well Known Text)
strings. Default: FALSE, returns GeoJSON structures.
Note, ODK Central currently only honours this parameter for Point
geometries.
Line and Polygon geometries are returned as "ODK WKT".
ruODK parses `geopoint` WKT into latitude, longitude, and altitude,
prefixed by the original field name to avoid naming conflicts.}

\item{parse}{Whether to parse submission data based on form schema.
Dates and datetimes will be parsed into local time.
Attachments will be downloaded, and the field updated to the local file
path.
Point locations will be split into components; GeoJSON (`wkt=FALSE`) will
be split into latitude, longitude, altitude and accuracy (with anonymous
field names), while WKT will be split into latitude, longitude, and
altitude (missing accuracy) prefixed by the original field name.
Default: TRUE.}

\item{download}{Whether to download attachments to `local_dir` or not.
If in the future, ODK Central supports hot-linking attachments,
this parameter will replace attachment filenames with their fully qualified
attachment URL.
Default: TRUE.}

\item{orders}{(vector of character) Orders of datetime elements for
lubridate.
Default:
\code{c("YmdHMS", "YmdHMSz", "Ymd HMS", "Ymd HMSz", "Ymd", "ymd")}.}

\item{tz}{A timezone, e.g. "Australia/Perth" or "UTC". Default: "UTC".}

\item{local_dir}{The local folder to save the downloaded files to,
default: "media".}

\item{pid}{The numeric ID of the project, e.g.: 2.
Default: \code{\link{get_default_pid}}.
Set default \code{pid} through \code{ru_setup(pid="...")}.
See \code{vignette("Setup", package = "ruODK")}.}

\item{fid}{The alphanumeric form ID, e.g. "build_Spotlighting-0-8_1559885147".
Default: \code{\link{get_default_fid}}.
Set default \code{fid} through \code{ru_setup(fid="...")}.
See \code{vignette("Setup", package = "ruODK")}.}

\item{url}{The ODK Central base URL without trailing slash.
Default: \code{\link{get_default_url}}.
Set default \code{url} through \code{ru_setup(url="...")}.
See \code{vignette("Setup", package = "ruODK")}.}

\item{un}{The ODK Central username (an email address).
Default: \code{\link{get_default_un}}.
Set default \code{un} through \code{ru_setup(un="...")}.
See \code{vignette("Setup", package = "ruODK")}.}

\item{pw}{The ODK Central password.
Default: \code{\link{get_default_pw}}.
Set default \code{pw} through \code{ru_setup(pw="...")}.
See \code{vignette("Setup", package = "ruODK")}.}

\item{verbose}{Whether to display debug messages or not.
Read `vignette("setup", package = "ruODK")` to learn how `ruODK`'s
verbosity can be set globally or per function.}
}
\value{
A list of lists.

  * `value` contains the submissions as list of lists.
  * `@odata.context` is the URL of the metadata.
  * `@odata.count` is the total number of rows in the table.
}
\description{
\lifecycle{maturing}
}
\details{
\code{\link{odata_submission_get}} downloads submissions from
(default) the main form group (submission table) including any non-repeating
form groups, or from any other table as specified by parameter `table`.


With parameter `parse=TRUE` (default), submission data is parsed into a
tibble. Any fields of type `dateTime`` or `date`` are parsed into dates, with
an optional parameter `tz` to specify the local timezone.
A parameter `local_dir` (default: "media") specifies a local directory for
downloaded attachment files. Already existing, previously downloaded
attachments will be retained. The only remaining manual step is to optionally
rename any point location coordinate parts into `latitude`, `longitude`,
`altitude`, and `accuracy`, as well as to join subtables to the master table.
The parameter `verbose` enables diagnostic messages along the download and
parsing process.

With parameter `wkt=TRUE`, spatial fields will be returned as WKT, rather
than GeoJSON. In addition, fields of type `geopoint` will be split into
latitude, longitude, and altitude, prefixed with the original field name.
E.g. a field `start_location` of type `geopoint` will be split into
`start_location_latitude`, `start_location_longitude`, and
`start_location_altitude`. The field name prefix will allow multiple fields
of type `geopoint` to be split into their components without naming
conflicts. Other spatial fields will be retained as WKT.

With parameter `parse=FALSE`, submission data is presented as nested list,
which is the R equivalent of the returned form JSON.
From there, \code{\link{odata_submission_parse}} will parse the data into a
tibble, and subsequent lines of \code{\link{ru_datetime}} and
\code{\link{attachment_get}} parse dates and download and link file
attachments.
As any of these steps might fail on unexpected errors, `ruODK` offers this
longer, more manual pathway as an option to investigate and narrow down
unexpected or unwanted behaviour.
}
\examples{
\dontrun{
# Set default credentials, see vignette "setup"
ruODK::ru_setup(
  svc = paste0(
    "https://sandbox.central.opendatakit.org/v1/projects/14/",
    "forms/build_Flora-Quadrat-0-2_1558575936.svc"
  ),
  un = "me@email.com",
  pw = "..."
)

form_tables <- ruODK::odata_service_get()
data <- odata_submission_get() # default: main data table
data <- odata_submission_get(table = form_tables$url[1]) # same, explicitly
data_sub1 <- odata_submission_get(table = form_tables$url[2]) # sub-table 1
data_sub2 <- odata_submission_get(table = form_tables$url[3]) # sub-table 2

# Skip one row, return the next 1 rows (top), include total row count
data <- odata_submission_get(
  table = form_tables$url[1],
  skip = 1,
  top = 1,
  count = TRUE
)

# Point coordinates (lat, lon, alt, acc) need to be renamed
data <- odata_submission_get(
  table = form_tables$url[1],
  wkt = FALSE
) \%>\%
  dplyr::rename(
    # Adjust coordinate colnames as needed
    # longitude = x13,
    # latitude = x14,
    # altitude = x15,
    # accuracy = x16
  )

# Parse point coordinates into WKT like "POINT (115.8840312 -31.9961844 0)"
data <- odata_submission_get(
  table = form_tables$url[1],
  wkt = TRUE
)
# Columns of type "geopoint" will be split into lat lon alt (no accuracy) and
# prefixed with the ODK geopoint field name. Use parse=FALSE to retain WKT.
# Columns of other spatial types will remain WKT.
}
}
\seealso{
\url{https://odkcentral.docs.apiary.io/#reference/odata-endpoints/odata-form-service}

\url{https://odkcentral.docs.apiary.io/#reference/odata-endpoints/odata-form-service/data-document}

Other odata-api: 
\code{\link{attachment_get}()},
\code{\link{attachment_url}()},
\code{\link{get_one_attachment}()},
\code{\link{odata_metadata_get}()},
\code{\link{odata_service_get}()},
\code{\link{odata_submission_parse}()},
\code{\link{unnest_all}()}
}
\concept{odata-api}
